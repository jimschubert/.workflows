name: Build
# See https://docs.github.com/en/actions/sharing-automations/creating-workflow-templates-for-your-organization
# See https://github.blog/developer-skills/github/using-reusable-workflows-github-actions/
# When a reusable workflow is triggered by a caller workflow, the github context is always associated with the caller workflow. The called workflow is automatically granted access to github.token and secrets.GITHUB_TOKEN.
on:
  workflow_call:
    inputs:
      golangci-lint:
        required: false
        type: string
        default: "v1.61"

permissions:
  contents: write

jobs:
  build:
    uses: ./.github/workflows/go-build.yml
    with:
      golangci-lint: ${{ inputs.golangci-lint }}
    secrets: inherit

  publish:
    needs: build
    if: needs.build.outputs.result == 'success' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    steps:
      # goreleaser v4 removed the auto-snapshot feature, so we need to explicitly define the flag for non-tag builds
      - if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: echo "flags=--snapshot" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Check for Docker Environment
        shell: bash
        id: has-docker
        run: |
          if [ ! -z "${DOCKER_PASSWORD}" ]; then
            echo "available=true" >> $GITHUB_OUTPUT
            exit 0
          fi

      - name: Set up QEMU
        if: success() && startsWith(github.ref, 'refs/tags/v') && steps.has-docker.outputs.available == 'true'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: success() && startsWith(github.ref, 'refs/tags/v') && steps.has-docker.outputs.available == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Docker Login
        if: success() && startsWith(github.ref, 'refs/tags/v') && steps.has-docker.outputs.available == 'true'
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          distribution: goreleaser
          version: latest
          args: release --clean ${{ env.flags }}

      - name: Cleanup
        if: always()
        run: |
          rm -f ${HOME}/.docker/config.json
